<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.work.springbootinit.mapper.UserMapper">

    <resultMap id="BaseResultMap" type="com.work.springbootinit.model.entity.User">
            <id property="id" column="id" jdbcType="BIGINT"/>
            <result property="userAccount" column="userAccount" jdbcType="VARCHAR"/>
            <result property="userPassword" column="userPassword" jdbcType="VARCHAR"/>
            <result property="userName" column="userName" jdbcType="VARCHAR"/>
            <result property="userAvatar" column="userAvatar" jdbcType="VARCHAR"/>
            <result property="userRole" column="userRole" jdbcType="VARCHAR"/>
            <result property="createTime" column="createTime" jdbcType="TIMESTAMP"/>
            <result property="updateTime" column="updateTime" jdbcType="TIMESTAMP"/>
            <result property="isDelete" column="isDelete" jdbcType="TINYINT"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,userAccount,userPassword,
        userName,userAvatar,userRole,
        createTime,updateTime,isDelete
    </sql>
    <insert id="insertUserListByMap">
        insert into user(userAccount, userPassword)
        values
        <foreach collection="list" item="user" separator=",">
            (
             <foreach collection="user" index="index" item="value">
                #{index}, #{value}
             </foreach>
            )
        </foreach>
    </insert>

    <insert id="insertOrUpdate" parameterType="java.util.List">
        <foreach collection="list" item="user" separator=";">
            <choose>
                <when test="_databaseType == 'MySQL'">
                    INSERT INTO user (userAccount, userPassword)
                    VALUES (#{user.userAccount}, #{user.userPassword})
                    ON DUPLICATE KEY UPDATE
                    userAccount = VALUES(userPassword)
                </when>
                <when test="_databaseType == 'PostgreSQL'">
                    INSERT INTO user (user_code, user_name)
                    VALUES (#{user.userCode}, #{user.userName})
                    ON CONFLICT (user_code) DO UPDATE
                    SET user_name = EXCLUDED.user_name
                </when>
                <when test="_databaseType == 'Oracle'">
                    MERGE INTO user u
                    USING (SELECT #{user.userCode} as user_code, #{user.userName} as user_name FROM dual) n
                    ON (u.user_code = n.user_code)
                    WHEN MATCHED THEN
                    UPDATE SET u.user_name = n.user_name
                    WHEN NOT MATCHED THEN
                    INSERT (user_code, user_name) VALUES (n.user_code, n.user_name)
                </when>
                <!-- Add more cases for other databases... -->
            </choose>
        </foreach>
    </insert>
</mapper>
